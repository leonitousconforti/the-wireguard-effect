name: "Windows WSL2 Test"
description: "Reusable windows wsl2 test action"

runs:
  using: "composite"
  steps:
    - uses: actions/download-artifact@v4
      with:
        name: the-wireguard-effect
        path: /tmp/the-wireguard-effect-artifact
    - shell: pwsh
      run: tar -xvf /tmp/the-wireguard-effect-artifact/the-wireguard-effect.tar

    # Yes all this is necessary to get WSL2 working on GitHub Actions without any user input
    # They are all as separate steps so its easier to debug and see what/where it fails (especially when I was writing this)
    - shell: pwsh
      run: dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
    - shell: pwsh
      run: dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
    - shell: pwsh
      run: wsl --set-default-version 2
    - shell: pwsh
      run: wsl --update --web-download
    - shell: pwsh
      run: wsl --install --no-distribution
    - shell: pwsh
      run: Invoke-WebRequest -URI https://cloud-images.ubuntu.com/releases/jammy/release/ubuntu-22.04-server-cloudimg-amd64-root.tar.xz -OutFile jammy-server-cloudimg-amd64-root.tar.xz
    - shell: pwsh
      run: wsl --import Ubuntu22.04 . jammy-server-cloudimg-amd64-root.tar.xz --version 2
    - shell: pwsh
      run: wsl --list --verbose

    # Install dependencies
    - shell: pwsh
      run: wsl --distribution Ubuntu22.04 --user root -- sudo apt-get update
    - shell: pwsh
      run: wsl --distribution Ubuntu22.04 --user root -- sudo apt-get upgrade -y
    - shell: pwsh
      run: wsl --distribution Ubuntu22.04 --user root -- sudo apt-get install -y openresolv
    - shell: pwsh
      run: wsl --distribution Ubuntu22.04 --user root -- curl -sL https://deb.nodesource.com/setup_18.x -o nodesource_setup.sh
    - shell: pwsh
      run: wsl --distribution Ubuntu22.04 --user root -- sudo bash nodesource_setup.sh
    - shell: pwsh
      run: wsl --distribution Ubuntu22.04 --user root -- sudo apt-get install -y nodejs
    - shell: pwsh
      run: wsl --distribution Ubuntu22.04 --user root -- npm install -g pnpm

    # This is where our testing starts
    # - shell: pwsh
    #   run: wsl --distribution Ubuntu22.04 --user root -- (pwd && cd ../ && pwd && cp -R ./the-wireguard-effect /tmp)
    # - shell: pwsh
    #   run: wsl --distribution Ubuntu22.04 --user root -- (ls -la /tmp/the-wireguard-effect/)
    # - shell: pwsh
    #   run: wsl --distribution Ubuntu22.04 --user root -- (cd /tmp/the-wireguard-effect && pnpm install)
    # - shell: pwsh
    #   run: wsl --distribution Ubuntu22.04 --user root -- (cd /tmp/the-wireguard-effect && ls -la ./src/)
    # - shell: pwsh
    #   run: wsl --distribution Ubuntu22.04 --user root -- (cd /tmp/the-wireguard-effect && pnpm test -- --run)
    - shell: pwsh
      run: wsl --distribution Ubuntu22.04 --user root -- pwd
    - shell: pwsh
      run: wsl --distribution Ubuntu22.04 --user root -- ls
