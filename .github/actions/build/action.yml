name: "Build"
description: "Reusable build action"

runs:
  using: "composite"
  steps:
    # Setup go and node
    - uses: actions/setup-go@v5
      with:
        cache-dependency-path: |
          submodules/wireguard-go/go.sum
    - uses: actions/setup-node@v4
      with:
        node-version: "18.x"

    # Setup pnpm and pnpm cache
    - name: "Install pnpm"
      uses: pnpm/action-setup@v4
      with:
        run_install: false
    - name: "Get pnpm store"
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    - name: "Setup pnpm cache"
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-node18.x-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-node18.x-pnpm-store-

    # Install dependencies
    - run: sudo apt-get update
      shell: bash
    - run: sudo apt-get install mingw-w64 imagemagick libarchive-tools build-essential flex bison dwarves libssl-dev libelf-dev bc ccache librsvg2-bin fakeroot debhelper libtool-bin cmake -y
      shell: bash

    # Setup ccache for wsl2-linux-kernel
    - name: "Setup ccache"
      uses: actions/cache@v4
      with:
        path: /home/runner/.cache/ccache
        key: wsl2-linux-kernel-ccache-${{ hashFiles('patches/WSL2-linux-kernel.patch') }}
        restore-keys: |
          wsl2-linux-kernel-ccache-

    # Setup wireguard windows dist cache
    - name: "Setup wireguard windows dist cache"
      uses: actions/cache@v4
      with:
        path: /tmp/wireguard-windows-distfiles
        key: wireguard-windows-dist
    - shell: bash
      run: |
        mkdir -p /tmp/wireguard-windows-distfiles/.distfiles/
        cp -r /tmp/wireguard-windows-distfiles/.distfiles/ submodules/wireguard-windows/.distfiles
        ls -la submodules/wireguard-windows/.distfiles

    # Check, lint, and build
    - shell: bash
      run: pnpm install
    - shell: bash
      run: pnpm check
    - shell: bash
      run: pnpm lint
    - shell: bash
      run: pnpm build

    # Cache wireguard windows dist
    - shell: bash
      run: |
        cp -r submodules/wireguard-windows/.distfiles/ /tmp/wireguard-windows-distfiles
        ls -la /tmp/wireguard-windows-distfiles

    # Clean up
    - shell: bash
      run: |
        sudo rm -rf .git/
        sudo rm -rf node_modules/
        sudo rm -rf submodules/wintun
        sudo rm -rf submodules/nvlist
        sudo rm -rf submodules/osxcross
        sudo rm -rf submodules/wireguard-apple
        sudo rm -rf submodules/wireguard-go
        sudo rm -rf submodules/wireguard-tools
        sudo rm -rf submodules/wireguard-windows
        sudo rm -rf submodules/WSL2-Linux-Kernel

    # https://github.com/actions/download-artifact/tree/v4/?tab=readme-ov-file#limitations
    - shell: bash
      run: tar -cvf /tmp/the-wireguard-effect.tar .

    # Upload the artifact
    - uses: actions/upload-artifact@v4
      with:
        name: the-wireguard-effect
        path: /tmp/the-wireguard-effect.tar
