name: Publish

on:
  release:
    types: [published]

concurrency:
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - uses: actions/setup-go@v5
        with:
          cache-dependency-path: |
            submodules/wireguard-go/go.sum
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org/"

      - name: "Install pnpm"
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: "Get pnpm store"
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: "Setup pnpm cache"
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node18.x-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node18.x-pnpm-store-

      - run: sudo apt-get update
      - run: sudo apt-get install mingw-w64 imagemagick libarchive-tools build-essential flex bison dwarves libssl-dev libelf-dev bc ccache librsvg2-bin fakeroot debhelper libtool-bin cmake -y

      - name: "Setup ccache"
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/ccache
          key: wsl2-linux-kernel-ccache-${{ hashFiles('patches/WSL2-linux-kernel.patch') }}
          restore-keys: |
            wsl2-linux-kernel-ccache-

      - name: "Setup wireguard windows dist cache"
        uses: actions/cache@v4
        with:
          path: /tmp/wireguard-windows-distfiles
          key: wireguard-windows-dist
      - run: mkdir -p /tmp/wireguard-windows-distfiles/.distfiles/
      - run: cp -r /tmp/wireguard-windows-distfiles/.distfiles/ submodules/wireguard-windows/.distfiles
      - run: ls -la submodules/wireguard-windows/.distfiles

      - run: pnpm install
      - run: pnpm check
      - run: pnpm lint
      - run: pnpm build

      - run: pnpm publish --no-git-checks --access public --registry https://registry.npmjs.org/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://npm.pkg.github.com/"
      - run: npm init -y --scope ${{ github.repository_owner }}
      - run: pnpm build
      - run: pnpm publish --no-git-checks --access public --registry https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
