diff --git a/src/wg-quick/openbsd.bash b/src/wg-quick/openbsd.bash
index b58ecf5..15c9bed 100755
--- a/src/wg-quick/openbsd.bash
+++ b/src/wg-quick/openbsd.bash
@@ -23,7 +23,6 @@ PRE_UP=( )
 POST_UP=( )
 PRE_DOWN=( )
 POST_DOWN=( )
-SAVE_CONFIG=0
 CONFIG_FILE=""
 PROGRAM="${0##*/}"
 ARGS=( "$@" )
@@ -66,7 +65,6 @@ parse_options() {
 			PreDown) PRE_DOWN+=( "$value" ); continue ;;
 			PostUp) POST_UP+=( "$value" ); continue ;;
 			PostDown) POST_DOWN+=( "$value" ); continue ;;
-			SaveConfig) read_bool SAVE_CONFIG "$value"; continue ;;
 			esac
 		fi
 		WG_CONFIG+="$line"$'\n'
@@ -74,14 +72,6 @@ parse_options() {
 	shopt -u nocasematch
 }

-read_bool() {
-	case "$2" in
-	true) printf -v "$1" 1 ;;
-	false) printf -v "$1" 0 ;;
-	*) die "\`$2' is neither true nor false"
-	esac
-}
-
 auto_su() {
 	[[ $UID == 0 ]] || exec doas -- "$BASH" -- "$SELF" "${ARGS[@]}"
 }
@@ -102,21 +92,6 @@ get_real_interface() {
 	return 1
 }

-add_if() {
-	while true; do
-		local -A existing_ifs="( $(wg show interfaces | sed 's/\([^ ]*\)/[\1]=1/g') )"
-		local index ret
-		for ((index=0; index <= 2147483647; ++index)); do [[ -v existing_ifs[wg$index] ]] || break; done
-		if ret="$(cmd ifconfig wg$index create description "wg-quick: $INTERFACE" 2>&1)"; then
-			REAL_INTERFACE="wg$index"
-			return 0
-		fi
-		[[ $ret == *"ifconfig: SIOCIFCREATE: File exists"* ]] && continue
-		echo "$ret" >&3
-		return 1
-	done
-}
-
 del_routes() {
 	local todelete=( ) destination gateway netif
 	[[ -n $REAL_INTERFACE ]] || return 0
@@ -175,7 +150,7 @@ set_mtu() {
 		[[ ${BASH_REMATCH[1]} == *:* ]] && family=inet6
 		output="$(route -n get "-$family" "${BASH_REMATCH[1]}" || true)"
 		[[ $output =~ interface:\ ([^ ]+)$'\n' && $(ifconfig "${BASH_REMATCH[1]}") =~ mtu\ ([0-9]+) && ${BASH_REMATCH[1]} -gt $mtu ]] && mtu="${BASH_REMATCH[1]}"
-	done < <(wg show "$REAL_INTERFACE" endpoints)
+	done < <(openbsd-wg show "$REAL_INTERFACE" endpoints)
 	if [[ $mtu -eq 0 ]]; then
 		read -r output < <(route -n get default || true) || true
 		[[ $output =~ interface:\ ([^ ]+)$'\n' && $(ifconfig "${BASH_REMATCH[1]}") =~ mtu\ ([0-9]+) && ${BASH_REMATCH[1]} -gt $mtu ]] && mtu="${BASH_REMATCH[1]}"
@@ -208,7 +183,7 @@ collect_endpoints() {
 	while read -r _ endpoint; do
 		[[ $endpoint =~ ^\[?([a-z0-9:.]+)\]?:[0-9]+$ ]] || continue
 		ENDPOINTS+=( "${BASH_REMATCH[1]}" )
-	done < <(wg show "$REAL_INTERFACE" endpoints)
+	done < <(openbsd-wg show "$REAL_INTERFACE" endpoints)
 }

 set_endpoint_direct_route() {
@@ -336,46 +311,6 @@ add_route() {
 	fi
 }

-set_config() {
-	cmd wg setconf "$REAL_INTERFACE" <(echo "$WG_CONFIG")
-}
-
-save_config() {
-	local old_umask new_config current_config address network cmd
-	new_config=$'[Interface]\n'
-	{ read -r _; while read -r _ _ network address _; do
-		[[ $network == *Link* ]] || new_config+="Address = $address"$'\n'
-	done } < <(netstat -I "$REAL_INTERFACE" -n -v)
-	# TODO: actually determine current DNS for interface
-	for address in "${DNS[@]}"; do
-		new_config+="DNS = $address"$'\n'
-	done
-	[[ -n $MTU ]] && new_config+="MTU = $MTU"$'\n'
-	[[ -n $TABLE ]] && new_config+="Table = $TABLE"$'\n'
-	[[ $SAVE_CONFIG -eq 0 ]] || new_config+=$'SaveConfig = true\n'
-	for cmd in "${PRE_UP[@]}"; do
-		new_config+="PreUp = $cmd"$'\n'
-	done
-	for cmd in "${POST_UP[@]}"; do
-		new_config+="PostUp = $cmd"$'\n'
-	done
-	for cmd in "${PRE_DOWN[@]}"; do
-		new_config+="PreDown = $cmd"$'\n'
-	done
-	for cmd in "${POST_DOWN[@]}"; do
-		new_config+="PostDown = $cmd"$'\n'
-	done
-	old_umask="$(umask)"
-	umask 077
-	current_config="$(cmd wg showconf "$REAL_INTERFACE")"
-	trap 'rm -f "$CONFIG_FILE.tmp"; exit' INT TERM EXIT
-	echo "${current_config/\[Interface\]$'\n'/$new_config}" > "$CONFIG_FILE.tmp" || die "Could not write configuration file"
-	sync "$CONFIG_FILE.tmp"
-	mv "$CONFIG_FILE.tmp" "$CONFIG_FILE" || die "Could not move configuration file"
-	trap - INT TERM EXIT
-	umask "$old_umask"
-}
-
 execute_hooks() {
 	local hook
 	for hook in "$@"; do
@@ -386,33 +321,6 @@ execute_hooks() {
 	done
 }

-cmd_usage() {
-	cat >&2 <<-_EOF
-	Usage: $PROGRAM [ up | down | save | strip ] [ CONFIG_FILE | INTERFACE ]
-
-	  CONFIG_FILE is a configuration file, whose filename is the interface name
-	  followed by \`.conf'. Otherwise, INTERFACE is an interface name, with
-	  configuration found at /etc/wireguard/INTERFACE.conf. It is to be readable
-	  by wg(8)'s \`setconf' sub-command, with the exception of the following additions
-	  to the [Interface] section, which are handled by $PROGRAM:
-
-	  - Address: may be specified one or more times and contains one or more
-	    IP addresses (with an optional CIDR mask) to be set for the interface.
-	  - DNS: an optional DNS server to use while the device is up.
-	  - MTU: an optional MTU for the interface; if unspecified, auto-calculated.
-	  - Table: an optional routing table to which routes will be added; if
-	    unspecified or \`auto', the default table is used. If \`off', no routes
-	    are added.
-	  - PreUp, PostUp, PreDown, PostDown: script snippets which will be executed
-	    by bash(1) at the corresponding phases of the link, most commonly used
-	    to configure DNS. The string \`%i' is expanded to INTERFACE.
-	  - SaveConfig: if set to \`true', the configuration is saved from the current
-	    state of the interface upon shutdown.
-
-	See wg-quick(8) for more info and examples.
-	_EOF
-}
-
 cmd_up() {
 	local i
 	get_real_interface && die "\`$INTERFACE' already exists as \`$REAL_INTERFACE'"
@@ -426,7 +334,7 @@ cmd_up() {
 	set_mtu
 	up_if
 	set_dns
-	for i in $(while read -r _ i; do for i in $i; do [[ $i =~ ^[0-9a-z:.]+/[0-9]+$ ]] && echo "$i"; done; done < <(wg show "$REAL_INTERFACE" allowed-ips) | sort -nr -k 2 -t /); do
+	for i in $(while read -r _ i; do for i in $i; do [[ $i =~ ^[0-9a-z:.]+/[0-9]+$ ]] && echo "$i"; done; done < <(openbsd-wg show "$REAL_INTERFACE" allowed-ips) | sort -nr -k 2 -t /); do
 		add_route "$i"
 	done
 	[[ $AUTO_ROUTE4 -eq 1 || $AUTO_ROUTE6 -eq 1 ]] && set_endpoint_direct_route
@@ -438,21 +346,11 @@ cmd_up() {
 cmd_down() {
 	get_real_interface || die "\`$INTERFACE' is not a WireGuard interface"
 	execute_hooks "${PRE_DOWN[@]}"
-	[[ $SAVE_CONFIG -eq 0 ]] || save_config
 	del_if
 	unset_dns
 	execute_hooks "${POST_DOWN[@]}"
 }

-cmd_save() {
-	get_real_interface || die "\`$INTERFACE' is not a WireGuard interface"
-	save_config
-}
-
-cmd_strip() {
-	echo "$WG_CONFIG"
-}
-
 # ~~ function override insertion point ~~

 if [[ $# -eq 1 && ( $1 == --help || $1 == -h || $1 == help ) ]]; then
@@ -465,16 +363,7 @@ elif [[ $# -eq 2 && $1 == down ]]; then
 	auto_su
 	parse_options "$2"
 	cmd_down
-elif [[ $# -eq 2 && $1 == save ]]; then
-	auto_su
-	parse_options "$2"
-	cmd_save
-elif [[ $# -eq 2 && $1 == strip ]]; then
-	auto_su
-	parse_options "$2"
-	cmd_strip
 else
-	cmd_usage
 	exit 1
 fi

